---

import type { Favicon } from "../types";
import Link from "./Link.astro";

const { 
  icons = [
    { preset: "ico", href: "favicon.ico" },
  ] as Favicon[]
} = Astro.props as { 
  icons: Favicon[] 
};

const getPreset = (preset: Favicon["preset"]) => {
  switch (preset) {
    case "ico"  : return { rel: "icon", type: "image/x-icon"  };
    case "png"  : return { rel: "icon", type: "image/png"     };
    case "svg"  : return { rel: "icon", type: "image/svg+xml" };
    case "apple": return { rel: "apple-touch-icon"            };
  }
};

---

{icons.map((icon) => {
  const attrs = getPreset(icon.preset);
  if (!attrs) return null;
  return (
    <Link
      rel={attrs.rel}
      type={attrs.type}
      sizes={icon.size ? `${icon.size}x${icon.size}` : undefined}
      {...Object.fromEntries(Object.entries(icon).filter(([k]) => !["rel", "type", "sizes"].includes(k)))}
    />
  );
})}